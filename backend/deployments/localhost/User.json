{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_lastname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_dob",
          "type": "uint256"
        }
      ],
      "name": "UserCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_firstname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lastname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_country",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_dob",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x0cae13c25fc296c99c441845fb21ec047fc9dcf366c9e6f50467c33d2f603436",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "746132",
    "logsBloom": "0x
    "blockHash": "0x02433eec625e5621f0f3c4044a114d9c9baeac62cc48019074c9b4abe8344589",
    "transactionHash": "0x0cae13c25fc296c99c441845fb21ec047fc9dcf366c9e6f50467c33d2f603436",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "746132",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c826332bf41422a78d103aeb008802a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_lastname\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dob\",\"type\":\"uint256\"}],\"name\":\"UserCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_firstname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lastname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_country\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dob\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Watson Bosquet\",\"details\":\"This contract is used as a proxy contract. Each user is created via UserFactory. It can received token\",\"kind\":\"dev\",\"methods\":{\"create(string,string,string,string,uint256)\":{\"params\":{\"_country\":\"User's country\",\"_dob\":\"User's date of birth stored as a timestamp\",\"_email\":\"User's email\",\"_firstname\":\"User's firstname\",\"_lastname\":\"User's lastname\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"TODO could implement the fact that it can only receive NFT from Event contract\"}},\"title\":\"User\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"create(string,string,string,string,uint256)\":{\"notice\":\"Create a user. Initialize all his information and emit a event\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"This contract can receive the reward NFTs\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/User.sol\":\"User\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"contracts/User.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\n\\n/**\\n * @title User\\n * @notice \\n * @dev This contract is used as a proxy contract. Each user is created via UserFactory.\\n * It can received token\\n * @author Watson Bosquet\\n*/\\ncontract User is IERC721Receiver {\\n  struct Participant {\\n    address userAddress;\\n    string firstname;\\n    string lastname;\\n    string email;\\n    string country;\\n    uint256 dob;\\n  }\\n\\n  Participant participant;\\n\\n  event UserCreated(address indexed _userAddress, string _firstname, string _lastname, string _email, string country, uint256 _dob);\\n\\n  /**\\n   * @notice Create a user. Initialize all his information and emit a event\\n   * @param _firstname  User's firstname\\n   * @param _lastname User's lastname\\n   * @param _email User's email\\n   * @param _country User's country\\n   * @param _dob User's date of birth stored as a timestamp\\n   */\\n  function create(string memory _firstname, string memory _lastname, string memory _email, string memory _country, uint256 _dob) external {\\n    require(participant.userAddress == address(0), \\\"You already have an account\\\");\\n    require(bytes(_firstname).length != 0, \\\"firstname cant be empty\\\");\\n    require(bytes(_lastname).length != 0, \\\"lastname cant be empty\\\");\\n    require(bytes(_email).length != 0, \\\"email cant be empty\\\");\\n    require(bytes(_country).length != 0, \\\"country cant be empty\\\");\\n\\n    participant = Participant(msg.sender, _firstname, _lastname, _email, _country, _dob);\\n  }\\n\\n  /**\\n   * @notice This contract can receive the reward NFTs\\n   * @dev TODO could implement the fact that it can only receive NFT from Event contract\\n   */\\n  function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {\\n    return IERC721Receiver.onERC721Received.selector;\\n  }\\n}\",\"keccak256\":\"0xb61165b490e09bd34c6e24713af014a8f219e6bcfba7ca8e5d47e2d461b3638a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c99806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b5780632fde70d11461006b575b600080fd5b61005560048036038101906100509190610443565b610087565b6040516100629190610506565b60405180910390f35b61008560048036038101906100809190610662565b61009c565b005b600063150b7a0260e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610126906107aa565b60405180910390fd5b6000855103610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a90610816565b60405180910390fd5b60008451036101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610882565b60405180910390fd5b60008351036101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906108ee565b60405180910390fd5b600082510361023f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102369061095a565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816102df9190610b91565b5060408201518160020190816102f59190610b91565b50606082015181600301908161030b9190610b91565b5060808201518160040190816103219190610b91565b5060a082015181600501559050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103758261034a565b9050919050565b6103858161036a565b811461039057600080fd5b50565b6000813590506103a28161037c565b92915050565b6000819050919050565b6103bb816103a8565b81146103c657600080fd5b50565b6000813590506103d8816103b2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610403576104026103de565b5b8235905067ffffffffffffffff8111156104205761041f6103e3565b5b60208301915083600182028301111561043c5761043b6103e8565b5b9250929050565b60008060008060006080868803121561045f5761045e610340565b5b600061046d88828901610393565b955050602061047e88828901610393565b945050604061048f888289016103c9565b935050606086013567ffffffffffffffff8111156104b0576104af610345565b5b6104bc888289016103ed565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610500816104cb565b82525050565b600060208201905061051b60008301846104f7565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056f82610526565b810181811067ffffffffffffffff8211171561058e5761058d610537565b5b80604052505050565b60006105a1610336565b90506105ad8282610566565b919050565b600067ffffffffffffffff8211156105cd576105cc610537565b5b6105d682610526565b9050602081019050919050565b82818337600083830152505050565b6000610605610600846105b2565b610597565b90508281526020810184848401111561062157610620610521565b5b61062c8482856105e3565b509392505050565b600082601f830112610649576106486103de565b5b81356106598482602086016105f2565b91505092915050565b600080600080600060a0868803121561067e5761067d610340565b5b600086013567ffffffffffffffff81111561069c5761069b610345565b5b6106a888828901610634565b955050602086013567ffffffffffffffff8111156106c9576106c8610345565b5b6106d588828901610634565b945050604086013567ffffffffffffffff8111156106f6576106f5610345565b5b61070288828901610634565b935050606086013567ffffffffffffffff81111561072357610722610345565b5b61072f88828901610634565b9250506080610740888289016103c9565b9150509295509295909350565b600082825260208201905092915050565b7f596f7520616c7265616479206861766520616e206163636f756e740000000000600082015250565b6000610794601b8361074d565b915061079f8261075e565b602082019050919050565b600060208201905081810360008301526107c381610787565b9050919050565b7f66697273746e616d652063616e7420626520656d707479000000000000000000600082015250565b600061080060178361074d565b915061080b826107ca565b602082019050919050565b6000602082019050818103600083015261082f816107f3565b9050919050565b7f6c6173746e616d652063616e7420626520656d70747900000000000000000000600082015250565b600061086c60168361074d565b915061087782610836565b602082019050919050565b6000602082019050818103600083015261089b8161085f565b9050919050565b7f656d61696c2063616e7420626520656d70747900000000000000000000000000600082015250565b60006108d860138361074d565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b7f636f756e7472792063616e7420626520656d7074790000000000000000000000600082015250565b600061094460158361074d565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109cc57607f821691505b6020821081036109df576109de610985565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a0a565b610a518683610a0a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a8e610a89610a84846103a8565b610a69565b6103a8565b9050919050565b6000819050919050565b610aa883610a73565b610abc610ab482610a95565b848454610a17565b825550505050565b600090565b610ad1610ac4565b610adc818484610a9f565b505050565b5b81811015610b0057610af5600082610ac9565b600181019050610ae2565b5050565b601f821115610b4557610b16816109e5565b610b1f846109fa565b81016020851015610b2e578190505b610b42610b3a856109fa565b830182610ae1565b50505b505050565b600082821c905092915050565b6000610b6860001984600802610b4a565b1980831691505092915050565b6000610b818383610b57565b9150826002028217905092915050565b610b9a8261097a565b67ffffffffffffffff811115610bb357610bb2610537565b5b610bbd82546109b4565b610bc8828285610b04565b600060209050601f831160018114610bfb5760008415610be9578287015190505b610bf38582610b75565b865550610c5b565b601f198416610c09866109e5565b60005b82811015610c3157848901518255600182019150602085019450602081019050610c0c565b86831015610c4e5784890151610c4a601f891682610b57565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d72d62620d2faa80c44b5ef290ad640f764640665a75865211a31f2913271b3164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b5780632fde70d11461006b575b600080fd5b61005560048036038101906100509190610443565b610087565b6040516100629190610506565b60405180910390f35b61008560048036038101906100809190610662565b61009c565b005b600063150b7a0260e01b905095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff166000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610126906107aa565b60405180910390fd5b6000855103610173576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016a90610816565b60405180910390fd5b60008451036101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610882565b60405180910390fd5b60008351036101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906108ee565b60405180910390fd5b600082510361023f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102369061095a565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816102df9190610b91565b5060408201518160020190816102f59190610b91565b50606082015181600301908161030b9190610b91565b5060808201518160040190816103219190610b91565b5060a082015181600501559050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103758261034a565b9050919050565b6103858161036a565b811461039057600080fd5b50565b6000813590506103a28161037c565b92915050565b6000819050919050565b6103bb816103a8565b81146103c657600080fd5b50565b6000813590506103d8816103b2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610403576104026103de565b5b8235905067ffffffffffffffff8111156104205761041f6103e3565b5b60208301915083600182028301111561043c5761043b6103e8565b5b9250929050565b60008060008060006080868803121561045f5761045e610340565b5b600061046d88828901610393565b955050602061047e88828901610393565b945050604061048f888289016103c9565b935050606086013567ffffffffffffffff8111156104b0576104af610345565b5b6104bc888289016103ed565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610500816104cb565b82525050565b600060208201905061051b60008301846104f7565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056f82610526565b810181811067ffffffffffffffff8211171561058e5761058d610537565b5b80604052505050565b60006105a1610336565b90506105ad8282610566565b919050565b600067ffffffffffffffff8211156105cd576105cc610537565b5b6105d682610526565b9050602081019050919050565b82818337600083830152505050565b6000610605610600846105b2565b610597565b90508281526020810184848401111561062157610620610521565b5b61062c8482856105e3565b509392505050565b600082601f830112610649576106486103de565b5b81356106598482602086016105f2565b91505092915050565b600080600080600060a0868803121561067e5761067d610340565b5b600086013567ffffffffffffffff81111561069c5761069b610345565b5b6106a888828901610634565b955050602086013567ffffffffffffffff8111156106c9576106c8610345565b5b6106d588828901610634565b945050604086013567ffffffffffffffff8111156106f6576106f5610345565b5b61070288828901610634565b935050606086013567ffffffffffffffff81111561072357610722610345565b5b61072f88828901610634565b9250506080610740888289016103c9565b9150509295509295909350565b600082825260208201905092915050565b7f596f7520616c7265616479206861766520616e206163636f756e740000000000600082015250565b6000610794601b8361074d565b915061079f8261075e565b602082019050919050565b600060208201905081810360008301526107c381610787565b9050919050565b7f66697273746e616d652063616e7420626520656d707479000000000000000000600082015250565b600061080060178361074d565b915061080b826107ca565b602082019050919050565b6000602082019050818103600083015261082f816107f3565b9050919050565b7f6c6173746e616d652063616e7420626520656d70747900000000000000000000600082015250565b600061086c60168361074d565b915061087782610836565b602082019050919050565b6000602082019050818103600083015261089b8161085f565b9050919050565b7f656d61696c2063616e7420626520656d70747900000000000000000000000000600082015250565b60006108d860138361074d565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b7f636f756e7472792063616e7420626520656d7074790000000000000000000000600082015250565b600061094460158361074d565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109cc57607f821691505b6020821081036109df576109de610985565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a0a565b610a518683610a0a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a8e610a89610a84846103a8565b610a69565b6103a8565b9050919050565b6000819050919050565b610aa883610a73565b610abc610ab482610a95565b848454610a17565b825550505050565b600090565b610ad1610ac4565b610adc818484610a9f565b505050565b5b81811015610b0057610af5600082610ac9565b600181019050610ae2565b5050565b601f821115610b4557610b16816109e5565b610b1f846109fa565b81016020851015610b2e578190505b610b42610b3a856109fa565b830182610ae1565b50505b505050565b600082821c905092915050565b6000610b6860001984600802610b4a565b1980831691505092915050565b6000610b818383610b57565b9150826002028217905092915050565b610b9a8261097a565b67ffffffffffffffff811115610bb357610bb2610537565b5b610bbd82546109b4565b610bc8828285610b04565b600060209050601f831160018114610bfb5760008415610be9578287015190505b610bf38582610b75565b865550610c5b565b601f198416610c09866109e5565b60005b82811015610c3157848901518255600182019150602085019450602081019050610c0c565b86831015610c4e5784890151610c4a601f891682610b57565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d72d62620d2faa80c44b5ef290ad640f764640665a75865211a31f2913271b3164736f6c63430008110033",
  "devdoc": {
    "author": "Watson Bosquet",
    "details": "This contract is used as a proxy contract. Each user is created via UserFactory. It can received token",
    "kind": "dev",
    "methods": {
      "create(string,string,string,string,uint256)": {
        "params": {
          "_country": "User's country",
          "_dob": "User's date of birth stored as a timestamp",
          "_email": "User's email",
          "_firstname": "User's firstname",
          "_lastname": "User's lastname"
        }
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "TODO could implement the fact that it can only receive NFT from Event contract"
      }
    },
    "title": "User",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "create(string,string,string,string,uint256)": {
        "notice": "Create a user. Initialize all his information and emit a event"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "This contract can receive the reward NFTs"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3526,
        "contract": "contracts/User.sol:User",
        "label": "participant",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Participant)3523_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Participant)3523_storage": {
        "encoding": "inplace",
        "label": "struct User.Participant",
        "members": [
          {
            "astId": 3512,
            "contract": "contracts/User.sol:User",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3514,
            "contract": "contracts/User.sol:User",
            "label": "firstname",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3516,
            "contract": "contracts/User.sol:User",
            "label": "lastname",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3518,
            "contract": "contracts/User.sol:User",
            "label": "email",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3520,
            "contract": "contracts/User.sol:User",
            "label": "country",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 3522,
            "contract": "contracts/User.sol:User",
            "label": "dob",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}